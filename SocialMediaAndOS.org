#+startup: beamer
#+TITLE: Social Networks and Privacy Models
#+AUTHOR: Clarissa Littler
#+OPTIONS: H:2
#+latex_header: \mode<beamer>{\usetheme{Madrid}}


* Social Networks: Privacy and Problems
** What this talk is and isn't
*** What it is							    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
   + Review the way the Big Three of social networks handle privacy \pause
   + Review the differences and similarities with offline privacy \pause
   + Discuss the kinds of privacy we'd want to have \pause
   + Cover how operating system security can inspire social media privacy 
** What this talk is and isn't
*** What it ain't						    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    + a fully fledged design of a new social network \pause
    + the solution to all of our problems \pause
    + obviously implementable \pause
    + a heartbreaking work of staggering genius
** Defining Our Terms
   + Social network \pause
   + Post \pause
   + Sharing \pause
   + Commenting \pause
   + Replying
** Feeling Safe
*** The Motivation					      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_env: block
    :BEAMER_col: 0.4
    :END:

   In order to continue using social networks, we need better ways of controlling conversations. The current state isn't sustainable.
\pause
*** The Hope						      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_env: block
    :BEAMER_col: 0.4
    :END:
Operating system security and offline courtesy might inspire social media privacy solutions.
   
* The State of Privacy in Current Networks
** Facebook
   + Most flexible of the Big Three \pause
     + Allows you to create custom filters \pause
     + Allows friends, friends of friends, and public as tiers \pause
   + Viewing and commenting and sharing are entangled
** Twitter 
   + only two privacy methods \pause
     1) blocking
     2) locking down \pause
   + No way to control sharing of a public tweet
** Tumblr
   + two privacy methods \pause
   + really mediocre blocking \pause
   + completely making your site inaccessible from the web
* Offline Conversations
** Face-to-face conversations
*** Expectations					      :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    Conversations in person, even in public, have an expectation of privacy
** Interrupting Strangers
*** Restaurant						      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_env: block
    :BEAMER_col: 0.4
    :END:
    Imagine you're overhearing strangers in a restaurant, talking about a topic you have strong opinions on. You walk over to their table and start talking to them. Rude or reasonable?
\pause
*** Hackathon						      :B_block:BMCOL:
    :PROPERTIES:
    :BEAMER_env: block
    :BEAMER_col: 0.4
    :END:
    Imagine you're overhearing strangers at a hackathon, talking about a topic you have strong opinions on. You scootch your chair over and start talking to them. Rude or reasonable?
** Social Contracts
*** 								 
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    Social contracts mediate small communities, but is this sufficient for social networks?
** Small Scale vs. Large Scale Responses
   + One person misunderstands your point \pause
   + One person calls you an asshole \pause
   + One person yells at you for being wrong \pause
   + What about thousands? \pause
   + In a few minutes?
** A Polite Society   
   + Large scales \pause 
   + Loose knit semi-anonymous clusters \pause
   + Social exclusion isn't a penalty \pause
   + Inapppropriate behavior should be discouraged by system
* Privacy in Social Networks
** Current Social Media
   + Mostly all or nothing \pause
   + No equivalent of public but inaccessible \pause
   + All possible ways of interacting are lumped together
** Role Based Access Control
   + Control access by assigning roles \pause
   + Groups in Linux \pause
   + Databases \pause
   + Permissions-by-job
** Role Based in Social Media
   + Facebook's custom groups \pause
   + Google+'s circles \pause
   + Dreamwidth/LJ custom groups \pause
   + Still no disentangling of permissions
* Privacy in Operating Systems
** Control flow of secrecy
   + information flows low to high \pause
   + Read high security \pause => can't write low security \pause
   + A system of labels \pause
   + Bell-LaPadula
** Lattice of labels
*** Secrecy levels 						    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
   {Top-secret, secret, public}
*** A Simple Lattice						    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:

    #+BEGIN_SRC dot :file firstlattice.png :exports results :cmdline -Kdot -Tpng
      digraph G {
        topsecret -> secret;
        secret -> public;
      }
    #+END_SRC

    #+RESULTS:
    [[file:firstlattice.png]]

** Lattice of labels
*** Secrecy levels
 {public, secret, top secret, world domination, world domination master plan}
*** A complex lattice						    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:

  #+BEGIN_SRC dot :file secondlattice.png :exports results :cmdline -Kdot -Tpng
    digraph {
       masterplan -> worlddomination;
       masterplan -> topsecret;
       worlddomination -> public;
       topsecret -> secret;
       secret -> public;
    }
  #+END_SRC
  #+ATTR_LATEX: :width 3cm
  #+RESULTS:
  [[file:secondlattice.png]]
** Access Control Lists
   + Resources have permissions attached to them \pause
   + Checked every time \pause
   + Files, hardware, etc. 

** Principle of Least Privilege
*** 								    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    Every element of the system should operate with exactly what permissions it needs to function
    Every agent in a system should operate with as few permissions as needed
** Mandatory Access Control
** Discretionary Access Control
** Capabilities in Operating Systems
   + special pointers to resources \pause
   + contain permissions for how to access the resource \pause
     + reading \pause
     + writing \pause
     + sharing
** Capabilities don't need to be checked
   + possession is 9/10 of the law \pause
   + sharing hands over a capability \pause
   + sharing is itself a permission
** Capabilities don't ensure security
   + resource with permissions \pause
   + policy determines how permissions are given \pause
   + policy maker has to enforce policy
* Privacy in Social Networks
** Posts as Capabilities
   + followers get pointers to posts with permissions \pause
   + a capability \pause
   + permissions include \pause
     + view \pause
     + share \pause
     + reply \pause
     + share with comment \pause
     + change permissions
** Secrecy as Applied to Social Media
   + Imagine labeling users as \pause
     + trusted \pause
     + untrusted \pause
     + dangerous \pause
     + coworker \pause
     + boss \pause
   + Every post is similarly labeled
** Policy Enforcement
** Role Based Social Media
   + Google+ circles \pause
   + Custom lists on facebook \pause
   + Most common
** ACLs in Social Media
*** 								    :B_block:
    :PROPERTIES:
    :BEAMER_env: block
    :END:
    An ACL analogue would involve every post listing permissions for all users
** What does this buy us?
   + social network -> trusted network \pause
   + more careful curation
** Example Policy
   + Trusted users can see and repost and comment \pause
   + Neutral users can see and repost \pause
   + Unstrusted users can only see \pause
   + Dangerous users can't even see
* What Could a New Social Network Look Like?
** Control over Viewing
   + When you make a post you control who sees it \pause
     + Even when shared by others
     + Even when commented on
     + And changes should be retroactive
** Control over Sharing
** Control over Commenting
** Setting Layers of Privacy
** Friends, Enemies, and Various Frenemic Configurations

